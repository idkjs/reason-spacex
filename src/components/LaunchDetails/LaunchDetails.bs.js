// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonMLCommunity__ApolloClient = require("reason-apollo-client/src/ReasonMLCommunity__ApolloClient.bs.js");
var ApolloClient__React_Hooks_UseQuery = require("reason-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");

((require("./LaunchDetails.css")));

var Raw = {};

var query = (require("@apollo/client").gql`
  query LaunchQuery($id: ID!)  {
    launch(id: $id)  {
      __typename
      mission_name
      launch_year
      launch_success
      launch_date_local
      rocket  {
        __typename
        rocket_name
        rocket_type
      }
      links  {
        __typename
        flickr_images
      }
    }
  }
`);

function parse(value) {
  var value$1 = value.launch;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.mission_name;
    var value$3 = value$1.launch_year;
    var value$4 = value$1.launch_success;
    var value$5 = value$1.launch_date_local;
    var value$6 = value$1.rocket;
    var tmp$1;
    if (value$6 == null) {
      tmp$1 = undefined;
    } else {
      var value$7 = value$6.rocket_name;
      var value$8 = value$6.rocket_type;
      tmp$1 = {
        __typename: value$6.__typename,
        rocket_name: !(value$7 == null) ? value$7 : undefined,
        rocket_type: !(value$8 == null) ? value$8 : undefined
      };
    }
    var value$9 = value$1.links;
    var tmp$2;
    if (value$9 == null) {
      tmp$2 = undefined;
    } else {
      var value$10 = value$9.flickr_images;
      tmp$2 = {
        __typename: value$9.__typename,
        flickr_images: !(value$10 == null) ? value$10.map(function (value) {
                if (!(value == null)) {
                  return value;
                }
                
              }) : undefined
      };
    }
    tmp = {
      __typename: value$1.__typename,
      mission_name: !(value$2 == null) ? value$2 : undefined,
      launch_year: !(value$3 == null) ? value$3 : undefined,
      launch_success: !(value$4 == null) ? value$4 : undefined,
      launch_date_local: !(value$5 == null) ? Caml_option.some(value$5) : undefined,
      rocket: tmp$1,
      links: tmp$2
    };
  }
  return {
          launch: tmp
        };
}

function serialize(value) {
  var value$1 = value.launch;
  var launch;
  if (value$1 !== undefined) {
    var value$2 = value$1.links;
    var links;
    if (value$2 !== undefined) {
      var value$3 = value$2.flickr_images;
      var flickr_images = value$3 !== undefined ? value$3.map(function (value) {
              if (value !== undefined) {
                return value;
              } else {
                return null;
              }
            }) : null;
      var value$4 = value$2.__typename;
      links = {
        __typename: value$4,
        flickr_images: flickr_images
      };
    } else {
      links = null;
    }
    var value$5 = value$1.rocket;
    var rocket;
    if (value$5 !== undefined) {
      var value$6 = value$5.rocket_type;
      var rocket_type = value$6 !== undefined ? value$6 : null;
      var value$7 = value$5.rocket_name;
      var rocket_name = value$7 !== undefined ? value$7 : null;
      var value$8 = value$5.__typename;
      rocket = {
        __typename: value$8,
        rocket_name: rocket_name,
        rocket_type: rocket_type
      };
    } else {
      rocket = null;
    }
    var value$9 = value$1.launch_date_local;
    var launch_date_local = value$9 !== undefined ? Caml_option.valFromOption(value$9) : null;
    var value$10 = value$1.launch_success;
    var launch_success = value$10 !== undefined ? value$10 : null;
    var value$11 = value$1.launch_year;
    var launch_year = value$11 !== undefined ? value$11 : null;
    var value$12 = value$1.mission_name;
    var mission_name = value$12 !== undefined ? value$12 : null;
    var value$13 = value$1.__typename;
    launch = {
      __typename: value$13,
      mission_name: mission_name,
      launch_year: launch_year,
      launch_success: launch_success,
      launch_date_local: launch_date_local,
      rocket: rocket,
      links: links
    };
  } else {
    launch = null;
  }
  return {
          launch: launch
        };
}

function serializeVariables(inp) {
  return {
          id: inp.id
        };
}

function makeVariables(id, param) {
  return {
          id: id
        };
}

var LaunchQuery_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var LaunchQuery_refetchQueryDescription = include.refetchQueryDescription;

var LaunchQuery_use = include.use;

var LaunchQuery_useLazy = include.useLazy;

var LaunchQuery_useLazyWithVariables = include.useLazyWithVariables;

var LaunchQuery = {
  LaunchQuery_inner: LaunchQuery_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  refetchQueryDescription: LaunchQuery_refetchQueryDescription,
  use: LaunchQuery_use,
  useLazy: LaunchQuery_useLazy,
  useLazyWithVariables: LaunchQuery_useLazyWithVariables
};

function LaunchDetails(Props) {
  var id = Props.id;
  var handleShowDetails = Props.handleShowDetails;
  var variables = {
    id: Belt_Option.getWithDefault(id, "")
  };
  var result = Curry.app(ReasonMLCommunity__ApolloClient.React.useQuery, [
        {
          query: query,
          Raw: Raw,
          parse: parse,
          serialize: serialize,
          serializeVariables: serializeVariables
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        variables
      ]);
  var match = result.data;
  if (result.loading) {
    return React.createElement("h1", {
                style: {
                  color: "white",
                  fontSize: "10rem",
                  height: "100vw"
                }
              }, "Loading...");
  }
  if (match === undefined) {
    return null;
  }
  var match$1 = match.launch;
  if (match$1 === undefined) {
    return null;
  }
  var links = match$1.links;
  var rocket = match$1.rocket;
  var launch_date_local = match$1.launch_date_local;
  var launch_success = match$1.launch_success;
  var launch_year = match$1.launch_year;
  var mission_name = match$1.mission_name;
  var missionName = mission_name !== undefined ? mission_name : "";
  var launch_year$1 = launch_year !== undefined ? launch_year : "";
  var launch_success$1 = launch_success !== undefined ? launch_success : false;
  var launch_date_local$1 = launch_date_local !== undefined ? Belt_Option.getWithDefault(Js_json.decodeString(Caml_option.valFromOption(launch_date_local)), "") : null;
  var rocketInfo;
  if (rocket !== undefined) {
    var match$2 = rocket.rocket_name;
    var match$3 = rocket.rocket_type;
    rocketInfo = match$2 !== undefined && match$3 !== undefined ? React.createElement(React.Fragment, undefined, React.createElement("h2", undefined, match$2), React.createElement("h3", undefined, match$3)) : null;
  } else {
    rocketInfo = null;
  }
  var images;
  if (links !== undefined) {
    var images$1 = links.flickr_images;
    if (images$1 !== undefined) {
      var images$2 = Belt_Array.keepMap(images$1, (function (i) {
              return Caml_option.some(i);
            }));
      var links$1 = Belt_Array.keepMap(images$2, (function (i) {
              return i;
            }));
      images = Belt_Array.map(links$1, (function (link) {
              return React.createElement("img", {
                          alt: "lol",
                          src: link
                        });
            }));
    } else {
      images = null;
    }
  } else {
    images = null;
  }
  return React.createElement("div", {
              className: "launch-details-container"
            }, React.createElement("h1", undefined, missionName), React.createElement("h4", undefined, "Launch Year: " + launch_year$1), React.createElement("h4", undefined, "Successful: " + Pervasives.string_of_bool(launch_success$1)), React.createElement("h4", undefined, launch_date_local$1), rocketInfo, React.createElement("button", {
                  className: "back-button",
                  onClick: (function (param) {
                      return Curry._1(handleShowDetails, undefined);
                    })
                }, "Back"), React.createElement("div", {
                  className: "img-container"
                }, images));
}

var make = LaunchDetails;

exports.LaunchQuery = LaunchQuery;
exports.make = make;
/*  Not a pure module */
