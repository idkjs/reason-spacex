// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ApolloClient__React_Hooks_UseQuery = require("reason-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");

var Raw = {};

var query = (require("@apollo/client").gql`
  query LastLaunchesQuery($offset: Int)  {
    launchesPast(limit: 20, offset: $offset)  {
      __typename
      mission_name
      launch_date_local
      links  {
        __typename
        flickr_images
      }
      id
      launch_success
    }
  }
`);

function parse(value) {
  var value$1 = value.launchesPast;
  return {
          launchesPast: !(value$1 == null) ? value$1.map(function (value) {
                  if (value == null) {
                    return ;
                  }
                  var value$1 = value.mission_name;
                  var value$2 = value.launch_date_local;
                  var value$3 = value.links;
                  var tmp;
                  if (value$3 == null) {
                    tmp = undefined;
                  } else {
                    var value$4 = value$3.flickr_images;
                    tmp = {
                      __typename: value$3.__typename,
                      flickr_images: !(value$4 == null) ? value$4.map(function (value) {
                              if (!(value == null)) {
                                return value;
                              }
                              
                            }) : undefined
                    };
                  }
                  var value$5 = value.id;
                  var value$6 = value.launch_success;
                  return {
                          __typename: value.__typename,
                          mission_name: !(value$1 == null) ? value$1 : undefined,
                          launch_date_local: !(value$2 == null) ? Caml_option.some(value$2) : undefined,
                          links: tmp,
                          id: !(value$5 == null) ? value$5 : undefined,
                          launch_success: !(value$6 == null) ? value$6 : undefined
                        };
                }) : undefined
        };
}

function serialize(value) {
  var value$1 = value.launchesPast;
  var launchesPast = value$1 !== undefined ? value$1.map(function (value) {
          if (value === undefined) {
            return null;
          }
          var value$1 = value.launch_success;
          var launch_success = value$1 !== undefined ? value$1 : null;
          var value$2 = value.id;
          var id = value$2 !== undefined ? value$2 : null;
          var value$3 = value.links;
          var links;
          if (value$3 !== undefined) {
            var value$4 = value$3.flickr_images;
            var flickr_images = value$4 !== undefined ? value$4.map(function (value) {
                    if (value !== undefined) {
                      return value;
                    } else {
                      return null;
                    }
                  }) : null;
            var value$5 = value$3.__typename;
            links = {
              __typename: value$5,
              flickr_images: flickr_images
            };
          } else {
            links = null;
          }
          var value$6 = value.launch_date_local;
          var launch_date_local = value$6 !== undefined ? Caml_option.valFromOption(value$6) : null;
          var value$7 = value.mission_name;
          var mission_name = value$7 !== undefined ? value$7 : null;
          var value$8 = value.__typename;
          return {
                  __typename: value$8,
                  mission_name: mission_name,
                  launch_date_local: launch_date_local,
                  links: links,
                  id: id,
                  launch_success: launch_success
                };
        }) : null;
  return {
          launchesPast: launchesPast
        };
}

function serializeVariables(inp) {
  var a = inp.offset;
  return {
          offset: a !== undefined ? a : undefined
        };
}

function makeVariables(offset, param) {
  return {
          offset: offset
        };
}

function makeDefaultVariables(param) {
  return {
          offset: undefined
        };
}

var LastLaunchesQuery_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var LastLaunchesQuery_refetchQueryDescription = include.refetchQueryDescription;

var LastLaunchesQuery_use = include.use;

var LastLaunchesQuery_useLazy = include.useLazy;

var LastLaunchesQuery_useLazyWithVariables = include.useLazyWithVariables;

var LastLaunchesQuery = {
  LastLaunchesQuery_inner: LastLaunchesQuery_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  refetchQueryDescription: LastLaunchesQuery_refetchQueryDescription,
  use: LastLaunchesQuery_use,
  useLazy: LastLaunchesQuery_useLazy,
  useLazyWithVariables: LastLaunchesQuery_useLazyWithVariables
};

exports.LastLaunchesQuery = LastLaunchesQuery;
/* query Not a pure module */
