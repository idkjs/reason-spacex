// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ApolloClient = require("reason-apollo-client/src/ApolloClient.bs.js");
var ApolloClient__ApolloClient = require("reason-apollo-client/src/@apollo/client/ApolloClient__ApolloClient.bs.js");
var ApolloClient__Link_Http_HttpLink = require("reason-apollo-client/src/@apollo/client/link/http/ApolloClient__Link_Http_HttpLink.bs.js");
var ApolloClient__Cache_InMemory_Policies = require("reason-apollo-client/src/@apollo/client/cache/inmemory/ApolloClient__Cache_InMemory_Policies.bs.js");
var ApolloClient__Cache_InMemory_InMemoryCache = require("reason-apollo-client/src/@apollo/client/cache/inmemory/ApolloClient__Cache_InMemory_InMemoryCache.bs.js");

var graphqlEndpoint = "https://api.spacex.land/graphql/";

var link = ApolloClient__Link_Http_HttpLink.make((function (param) {
        return graphqlEndpoint;
      }), undefined, undefined, undefined, undefined, undefined, undefined, undefined);

var cache = ApolloClient__Cache_InMemory_InMemoryCache.make(undefined, undefined, undefined, undefined, [[
        "Query",
        ApolloClient__Cache_InMemory_Policies.TypePolicy.make([[
                "launchesPast",
                {
                  TAG: /* OffsetLimitPagination */1,
                  _0: {
                    TAG: /* KeySpecifier */0,
                    _0: [
                      "limit",
                      "offset"
                    ]
                  }
                }
              ]], undefined, undefined, undefined, undefined, undefined)
      ]], undefined);

var client = ApolloClient.make(undefined, undefined, undefined, Caml_option.some(link), cache, undefined, undefined, true, undefined, ApolloClient__ApolloClient.DefaultOptions.make(ApolloClient__ApolloClient.DefaultMutateOptions.make(undefined, undefined, true, /* All */2, undefined, undefined), ApolloClient__ApolloClient.DefaultQueryOptions.make(/* NetworkOnly */2, /* All */2, undefined, undefined), ApolloClient__ApolloClient.DefaultWatchQueryOptions.make(/* NetworkOnly */3, /* All */2, undefined, undefined), undefined), undefined, undefined, undefined, undefined, undefined, undefined, undefined);

var $$default = client;

exports.graphqlEndpoint = graphqlEndpoint;
exports.link = link;
exports.cache = cache;
exports.client = client;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* link Not a pure module */
